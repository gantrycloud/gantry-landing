














[{"categories":["main"],"contents":"   Lets get seven points clear:  Argo is a free, open-source continuous deployment tool It\u0026rsquo;s designed to be easy to use and deploy with any language or framework It works by running commands on your servers as you push new code to GitHub You can configure it for automatic deployments using web hooks from GitHub or BitBucket When deploying, Argo will run tests before updating the server if necessary If tests fail, then no changes are made and the previous version of the app remains deployed until you manually update it yourself (or fix the tests) Argo also has an option for staging environments that let you test out new features before they go live in production  ","date":"05","image":"images/argocd-ui.gif","month":"Apr","permalink":"https://gantry.cloud/post/argoexplained/","tags":["Services"],"title":"Argo Explained"},{"categories":["main"],"contents":"Kubernetes Kickstart will take your existing application built in docker containers and load them into a scalable kubernetes cluster. We\u0026rsquo;ll provide documentation on how to scale and debug deployments alongside our team taking care of the infrastructure tier specifics. Our four week pilot study will bring your infrastructure stack up-to-date while you continue iterating with your developers uninterrupted. Get started right away or contact us for questions!\n","date":"05","image":"images/k8sindia.png","month":"Apr","permalink":"https://gantry.cloud/post/kickstart/","tags":["Services"],"title":"Kubernetes Kickstart"},{"categories":["main"],"contents":"Straddled over a shipyard, a Gantry Crane is used to organize containers, and is capable of lifting the heaviest loads on the planet. In our increasingly automated world, infrastructure is code, software is containerized, and storage is cloud based. Your business has deadlines, objectives and assets that need to get places on time, every time. Let us do the heavy lifting. – Gantry\n","date":"04","image":"images/shipyard.jpg","month":"Mar","permalink":"https://gantry.cloud/post/gantry/","tags":["Systems"],"title":"What are you bringing aboard?"},{"categories":["consulting"],"contents":"How do Kustomize and Helm Compare?  Helm and Kustomize are two tools that allow users to create custom Linux-based OS stacks for cloud environments. The only difference between these two is in how they work with Docker containers. Kustomize builds on top of a base image, whereas Helm creates a new container instance from scratch. Kustomize does not have built-in support for using Docker images as templates, but has an ability to use any other tool such as Ansible or Chef. Helm also doesn\u0026rsquo;t have built-in support for using Docker images as templates, but it can be extended via plugins or scripts if desired.\u2028Helm is an open-source project that was started by Google and has quickly grown in popularity due to its ease of installation and configuration. The goal of the project is \u0026ldquo;to make building repeatable, reliable, and portable systems easier.\u0026rdquo; In this blog post I\u0026rsquo;ll show you how easy it can be to deploy applications with just a few commands!\nKustomize is a tool for templating application deployment, which enables users to customize the way their applications are deployed. It does this by providing an interface that allows you to specify what commands and options should be executed during installation. This blog post will show you how to use Kustomize in order to template your deployment process so that it\u0026rsquo;s tailored specifically for your needs.\nIn other words, Kustomize is more of a tool for managing images while Helm offers something akin to templates. However there are many similarities as well such that both offer the ability configure and provision containers with configuration information defined in files rather than code or command line parameters which makes them very suitable choices when dealing specific tasks like deploying an application stack at scale using multiple instances (e.g. microservices) because they allow you do this without having deep knowledge about the Dockerfiles nor getting into the weeds with Kubernetes - all tools are provided with preconfigured option sets from their respective repositories based on your needs/requirements specified in the config yaml.\nWe\u0026rsquo;ll discuss what you need in order to build and deploy containers with Kustomize on Kubernetes! Lets go over a few steps that are needed for this process:\n - First, create a new Kustomize file in your directory of choice. The name can be anything you would like, but it should end with the .kts extension to make sure that kdevelop knows how this is set up as an application template for deployment purposes. - Open Terminal and cd into where we just created our newly named folder (in my case I'm using ~/projects). Type 'ksubmake -t appname' This will create all files needed by other commands used when setting out on installing apps via terminal or SSH connection...etc.. If any errors occur at anytime during installation please consult documentation listed below such +http://devdocsxpressblog/articles/. After running command enter ls again. - Create an account at Docker Hub so our applications can be built by using their official images - Clone kubercustomizer/kubectl which contains all of its source code repository files into ~/git_code/ - Navigate back inside terminal cd ~\\git\\code and type python setup . py develop - p ./src/configs - Finally install jinja because it will serve to... Continue Reading on our tutorial posts. ","date":"05","image":"images/kustomize.png","month":"Mar","permalink":"https://gantry.cloud/post/kustomize/","tags":["Open Source"],"title":"Kustomize"},{"categories":["consulting"],"contents":"Day Zero: Your team has decided that it is time to move virtual. There are questions whose answers only create more questions. What platform? Which Software? Who will handle it? What if it breaks? And most critical: What if we lose critical data? Start at the beginning and follow the map.\n","date":"12","image":"images/clock.jpg","month":"May","permalink":"https://gantry.cloud/post/dayzero/","tags":["Dev-Ops"],"title":"Day Zero"},{"categories":["consulting"],"contents":"Decision Making How do you decide what cloud is for you?\nDo you need compliance? Perhaps you are leaning towards Azure.\nAre your engineers on google? GCloud!\nMaybe you need your own control planes altogether!\n","date":"12","image":"images/allmoves.png","month":"May","permalink":"https://gantry.cloud/post/decisions/","tags":["Cloud"],"title":"Decisions"},{"categories":["consulting"],"contents":"So Kubernetes is your destination, great choice! Now how do you get there? Whether you are deploying an API, UI, or Machine Learning Model, you still need to progress through the software development lifecycle.\nHere automation is your friend, with Continuous Integration and Continuous delivery you can increase feature and reliability development velocity for your application. With each commit you can build, test, deliver, and monitor your product.\nWith our managed CI/CD pipelines we provide you with the latest cloud native build, test, and delivery techniques. Combined with the reliability and observability of Kubernetes, having a fully automated end-to-end pipeline can deliver your product into a battle tested next-generation environment with a feedback loop to enable both fast iteration and high-availability.\n","date":"12","image":"images/plumbing.png","month":"May","permalink":"https://gantry.cloud/post/managed-ci-pipeline/","tags":["Cloud"],"title":"Managed CI Pipelines"},{"categories":["services"],"contents":"   Terraform + Kubernetes + Prometheus + Helm Foundation Your infrastructure scalability needs now go beyond what can be accomplished with docker-compose. We will build your helm charts and give you a documented process for setting up your infrastructure on a cloud provider such as Gcloud, AWS, DigitalOcean or Azure.\nWhat we provide:\n Main.tf file tailored to create the resources for your services (load balancers, clusterIPs, Pods) Unified or volumed helm charts templating your deployments Deployment script to launch those services in a kubernetes cluster Prometheus dashboard installed to view your status Documentation on how to recreate and maintain system  $15,000 up to 20 microservices\nImplemenation of Declarative Git-Ops Pipeline (ARGOCD) Don\u0026rsquo;t push code to your cluster, have your cluster intelligently pull it instead! Have a push-button deployment for up to 20 microservices done for you. We give existing Kubernetes or Container based environment an ArgoCD continuous delivery backbone so that every time your code in changes in dev, test or production; your applications will update instantly. You just decide what triggers to set off the synchronization.\nWhat we provide:\n ArgoCD setup that installs in your cluster and syncs latest images from your container repository as soon as they are built (usually upon tagging in your CI pipeline) Scripts to launch this repeatably and efficiently. Optional Argo Rollouts and Argo Workflows (Additional)  $12,000 up to 20 microservices\nProprietary Control Plane Are you a bank or a business that requires the highest privacy measures? You can\u0026rsquo;t use a cloud provider, but you want to use all the best available open source tools. You need your own control plane (kubeadm) and we will build this for you and educate your team on how to operate it.\nWhat we provide:\n Kubernetes control plane running on bare metal or virtual machine. Basic cluster setup on the machine Documentation and support on how to modify, migrate and scale your custom environment.  $22,000\nContact Us: services@gantry.cloud ","date":"12","image":"images/bridge.jpg","month":"May","permalink":"https://gantry.cloud/services/","tags":[],"title":"Services"},{"categories":["main"],"contents":"A small team of engineers on a big mission to make the sky a safer, more efficient space.\n","date":"12","image":"images/skygrid.jpg","month":"May","permalink":"https://gantry.cloud/post/skygrid/","tags":["Software"],"title":"A company taking flight"},{"categories":["main"],"contents":"Why not declarative? Have you ever written a deploy script to push your Kubernetes Helm chart yamls up to the cluster one by one?\nMaybe you do this manually and then have the misfortune of having to do it all over once more when something breaks.\nArgoCD is a powerful tool that runs in your cluster and grabs everything it needs from github/gitlab including:\n Container Repository Locations Helm Charts Latest Tags  It then executes the helm command as a \u0026ldquo;sync\u0026rdquo; in your cluster and puts it all together in a beautiful visual graph.\nIn addition, all your work is saved and can be rolled back to with the click of a button.\nArgoCD is the first and last thing you should be installing on your cluster if you are running helm charts with a dynamic team workflow.\nAsk us how you can rapidly make this your CD setup!\n","date":"12","image":"images/argo.png","month":"May","permalink":"https://gantry.cloud/post/argocd/","tags":["Systems"],"title":"Argo CD"},{"categories":["main"],"contents":"On Caddy\n","date":"12","image":"images/caddylogo.jpg","month":"May","permalink":"https://gantry.cloud/post/caddy/","tags":["Software"],"title":"Caddy \u003e Nginx"},{"categories":["consulting"],"contents":"Unifying your helm.. is it a good idea?\nSo you have twenty microservices floating around with their own values files, stateful sets, service yamls and possibly even pulling from isolated sources of secrets.\nThis can be hard to maintain, depending on your CI pipeline due to the fact that each values file needs to have its versions modified every time a new container is made, tagged and pushed to the repository.\nIn one instance, we had a gitlab ci pipeline runner that would run the docker build and put the container in google cloud repository upon tagging. Then when deploying the helm charts, each chart would self-reference in the _helpers.tpl, NOTES.txt, and stateful sets/deployment/service yamls. This was a source of some frustration attributable to the following:\n Too many files Pipeline updates cannot be version controlled on one values yaml Observability on Declarative platforms (such as argo)  Initially, our ARGO dash appeared as if there were many unrelated applications running:\nAfter combining the helm charts into one, with a handy script I wrote, our ARGO setup appeared beautifully as this:\nNow, not only do we have the option of rolling back using the kubernetes controller, but we could roll back the values yaml itself to prior versions.\nWe instead set up the gitlab runner to go into the unified-helm chart repository and update the values yaml each time a release was tagged in the source repos by any of our engineers.\nSo the lesson is: Unless otherwise required, wield helm in a manner that is most powerful for your team and your infrastructure.\nMark\n","date":"12","image":"images/helm.png","month":"May","permalink":"https://gantry.cloud/post/unihelm/","tags":["Dev-Ops"],"title":"UniHelm"},{"categories":null,"contents":"Jason Stryker is a Site Reliability Engineer who has worked on cloud migrations and critical infrastructure automation for a major banking institution.\n","date":"01","image":"","month":"Jan","permalink":"https://gantry.cloud/author/jason-stryker/","tags":null,"title":"Jason Stryker"},{"categories":null,"contents":"Mark Wagner is a Full Stack Linux engineer based in Austin, Texas who previously automated Machine Learning efforts at Wells Fargo.\n","date":"01","image":"","month":"Jan","permalink":"https://gantry.cloud/author/mark-wagner/","tags":null,"title":"Mark Wagner"},{"categories":["services"],"contents":"Enhanced Kubernetes Managed and self-hosted options available\nEnhanced CI/CD Managed and self-hosted options available\nSo Kubernetes is your destination, great choice! Now how do you get there? Whether you are deploying an API, UI, or Machine Learning Model, you still need to progress through the software development lifecycle.\nHere automation is your friend, with Continuous Integration and Continuous delivery you can increase feature and reliability development velocity for your application. With each commit you can build, test, deliver, and monitor your product.\nWith our managed CI/CD pipelines we provide you with the latest cloud native build, test, and delivery techniques. Combined with the reliability and observability of Kubernetes, having a fully automated end-to-end pipeline can deliver your product into a battle tested next-generation environment with a feedback loop to enable both fast iteration and high-availability.\n","date":"01","image":"images/getty.servers.jpg","month":"Jan","permalink":"https://gantry.cloud/products/","tags":[],"title":"Products"}]